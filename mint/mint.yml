---
- name: Mint Packages
  hosts: all
  gather_facts: yes
  tasks:

    - name: Install Basic Packages
      apt:
        name:
          # powersave
          - tlp
          - tlp-rdw
          # Speed up program start
          - preload
          # mediacodecs and fonts
          - mint-meta-codecs
          - ubuntu-restricted-extras
          - libavcodec-extra
          - libdvd-pkg
          - fonts-terminus
          # share desk
          - x11vnc
          # useful other stuff
          - spectre-meltdown-checker
          - pwgen
          - arj
          - p7zip
          - unace
          - unadf
          - bvi
          - fdupes
          - radeontop
          - debootstrap
          - geoip-bin
          - sshfs
          - speedtest-cli
          - gnome-characters
          - gparted
          # tools for android-smartphones/LineageOS
          - heimdall-flash
          - android-tools-adb
          - android-tools-fastboot
          # dconf-gui
          - dconf-editor
          # Media
          - lame
          - vorbis-tools
          - fdkaac
          - flac
          # brennen
          - brasero
          # misc
          - wireguard
          - wireguard-tools
          - tinyproxy
          - hardinfo
          - rpi-imager
          - redshift-gtk
          - clamtk
          # virtualization
          #- virtualbox
          #- virtualbox-qt
          #- virtualbox-guest-additions-iso
          # screenshot
          - flameshot
        update_cache: yes
        install_recommends: no

    - name: check if mint-minimal exists
      ansible.builtin.stat:
        path: /etc/mint-minimal
      register: mint_minimal_file

    - name: install additional packages if no mint minimal install
      ansible.builtin.apt:
        name:
          - openoffice.org-hyphenation
          # groupware
          - evolution
          # nextcloud
          - nextcloud-desktop
          - nemo-nextcloud
          # misc
          - opus-tools
          - wavpack
          - musepack-tools
          - gthumb
          - mediainfo-gui
          - easytag
          - audacity
          - asunder
          - mediathekview
          - audacious
          - guvcview
          - calf-plugins
          - handbrake
          - gpodder
          # retro
          - dosbox
          # OnlineBanking
          - hibiscus
        install_recommends: no
      when: not mint_minimal_file.stat.exists

    - name: Install Flatpaks
      community.general.flatpak:
        name:
          - org.gtk.Gtk3theme.Mint-Y-Dark
          - com.github.tchx84.Flatseal
        state: present
        method: system
      when: not mint_minimal_file.stat.exists
  
    # Gather facts about the system, including virtualization type
    - name: Gather system facts
      ansible.builtin.setup:

    # Check if the system is running as a KVM virtual machine
    - name: Set fact if running on KVM
      ansible.builtin.set_fact:
        is_kvm_guest: "{{ ansible_facts.virtualization_type == 'kvm' and ansible_facts.virtualization_role == 'guest' }}"

    - name: Install QXL components only if this is a KVM guest
      apt:
        name:
          - xserver-xorg-video-qxl
          - spice-vdagent
          - qemu-guest-agent
          - virtiofsd
          - linux-image-virtual
      when: is_kvm_guest

    - name: start qemu-guest-agent
      service:
        name: qemu-guest-agent
        state: started
        enabled: yes
      when: is_kvm_guest

    - name: create /etc/pipewire/pipewire-pulse.conf.d
      ansible.builtin.file:
        path: /etc/pipewire/pipewire-pulse.conf.d
        state: directory
        mode: '0755'
      when: is_kvm_guest

    - name: pipewire write tunnel to gateway
      ansible.builtin.copy:
        dest: /etc/pipewire/pipewire-pulse.conf.d/99-tunnel.conf
        content: |
          context.modules = [
            { name = libpipewire-module-pulse-tunnel
              args = {
                tunnel.mode = source
                pulse.server.address = "tcp:{{ default_gw.stdout }}:4656"
                node.name = "Input-to-Host"
                node.description = "tcp forward to {{ ansible_default_ipv4.gateway }}"
                # pulse.latency = 200
                # reconnect.interval.ms = 0
                # stream.props = { }
              }
            }
          
            { name = libpipewire-module-pulse-tunnel
              args = {
                tunnel.mode = sink
                pulse.server.address = "tcp:{{ default_gw.stdout }}:4656"
                node.name = "Output-to-Host"
                node.description = "tcp forward to {{ ansible_default_ipv4.gateway }}"
                # pulse.latency = 200
                # reconnect.interval.ms = 0
                # stream.props = { }
              }
            }
          ]
        owner: root
        group: root
        mode: '0644'
      when: is_kvm_guest

    - name: mint-config-update
      blockinfile:
        path: /etc/systemd/system/mint-config-update.service
        create: yes
        mode: 0444
        owner: root
        group: root
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          [Unit]
          Description=Mint Upgrade Service
          # star after and on shutdown dont stop before script has terminated
          After=network.target dnscrypt-proxy.service systemd-resolved.service sshd.service tor@default.service
                    
          [Service]
          Type=oneshot
          User=root
          ExecStart=bash -x /usr/local/sbin/mint-config-update.sh
          # Wait for "normal" exit of the script SIGCONT doesnt kill/terminate it
          KillSignal=SIGCONT
          # wait a maximum of 30 minutes
          TimeoutStopSec=1800
          StandardOutput=append:/var/log/mint-config-update.sh.log
          StandardError=append:/var/log/mint-config-update.sh.log
          
          [Install]
          WantedBy=multi-user.target

    - name: 'add mint-config-update to startup'
      command: systemctl enable mint-config-update.service
      args:
        creates: /etc/systemd/system/multi-user.target.wants/mint-config-update.service

    - name: remove dhcpcd because NetworkManager is doing the job
      command: systemctl disable dhcpcd
      args:
        removes: /etc/systemd/system/multi-user.target.wants/dhcpcd.service

    - name: /etc/default/grub nonquiet nosplash
      ansible.builtin.lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=.*$'
        line: "GRUB_CMDLINE_LINUX_DEFAULT=\"nosplash\""
        backup: yes
      notify:
      - update-grub

    - name: enable Mint Autoupdate 
      command: systemctl enable mintupdate-automation-upgrade.timer
      args:
        creates: /etc/systemd/system/timers.target.wants/mintupdate-automation-upgrade.timer

    - name: enable Mint Autoupdate Cleanup
      command: systemctl enable mintupdate-automation-autoremove.timer
      args:
        creates: /etc/systemd/system/timers.target.wants/mintupdate-automation-autoremove.timer

    - name: mint-config-update
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/egabosh/linux-setups/refs/heads/main/mint/mint-config-update.sh
        dest: /usr/local/sbin/mint-config-update.sh
        mode: '0555'
        owner: root
        group: root
        force: yes
        backup: yes

    - name: mint-config-update startmenu
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/egabosh/linux-setups/refs/heads/main/mint/mint-config-update.desktop
        dest: /usr/share/applications/mint-config-update.desktop
        mode: '0444'
        owner: root
        group: root
        force: yes

    - name: Allow Mint warpinator in firewall to tcp port 42000
      community.general.ufw:
        rule: allow
        port: '42000'
        proto: tcp

    - name: Allow Mint warpinator in firewall to udp port 42000
      community.general.ufw:
        rule: allow
        port: '42000'
        proto: udp

    # no more pulse since Mint 22
    #- name: force samplerate to 44100 to avoid problems with additional audio hardware for live streams
    #  blockinfile:
    #    path: /etc/pulse/daemon.conf
    #    owner: root
    #    group: root
    #    create: no
    #    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    #    block: |
    #      default-sample-rate = 44100
    #      alternate-sample-rate = 44100
    #    backup: yes


  handlers:

    - name: update-grub
      ansible.builtin.shell: update-grub
