---
- name: authelia
  hosts: all

  vars:
    ldap_basedn: "{{ 'dc=openldap,' ~ inventory_hostname | split('.') | map('regex_replace', '^(.*)$', 'dc=\\1') | join(',') }}"

  tasks:

    - name: Create /home/docker/authelia.{{inventory_hostname}} dir
      ansible.builtin.file:
        path: /home/docker/authelia.{{inventory_hostname}}
        owner: root
        group: docker
        state: directory
        mode: '0550'

    - name: Check if Authelia secrets exists
      stat:
        path: /home/docker/authelia.{{ inventory_hostname }}/env
      register: authelia_conf_status

    - name: Generate Authelia secrets
      when: not authelia_conf_status.stat.exists
      block:

        - name: Generate a secure password using pwgen
          command: pwgen -s 32 1
          register: session_secret

        - name: Generate a secure password using pwgen
          command: pwgen -s 32 1
          register: encryption_key

        - name: Save plaintext password to env file
          copy:
            content: |
              session_secret={{session_secret.stdout}}
              encryption_key={{encryption_key.stdout}}
            dest: /home/docker/authelia.{{ inventory_hostname }}/env
            mode: '0440'
            owner: docker
            group: root

    - name: Get session_secret from file
      shell: "grep ^session_secret= /home/docker/authelia.{{inventory_hostname}}/env | cut -d= -f2-"
      register: session_secret
      changed_when: false

    - name: Get encryption_key from file
      shell: "grep ^encryption_key= /home/docker/authelia.{{inventory_hostname}}/env | cut -d= -f2-"
      register: encryption_key
      changed_when: false

    - name: Get LDAP admin password from file
      shell: "grep ^LDAP_ADMIN_PASSWORD= /home/docker/ldap.{{inventory_hostname}}/env.openldap | cut -d= -f2-"
      register: ldap_admin_password
      changed_when: false

    - name: /home/docker/authelia.{{inventory_hostname}}/authelia-data/configuration.yml
      blockinfile:
        path: /home/docker/authelia.{{inventory_hostname}}/authelia-data/configuration.yml
        mode: "0600"
        owner: root
        group: root
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          session:
            secret: "{{session_secret.stdout}}"
            name: auth.{{inventory_hostname}}_session
            same_site: lax
            expiration: 1h
            inactivity: 15m
            remember_me: 1M
            cookies:
              - domain: "{{inventory_hostname}}"
                authelia_url: https://auth.{{inventory_hostname}}

          storage:
            local:
              path: /config/db.sqlite3
            encryption_key: "{{encryption_key.stdout}}"

          authentication_backend:
            password_reset:
              disable: true
            ldap:
              implementation: custom
              address: ldaps://openldap.{{inventory_hostname}}:636
              base_dn: "{{ldap_basedn}}"
              additional_users_dn: "ou=users"
              additional_groups_dn: "ou=groups"
              user: "cn=head-of-ldap,{{ldap_basedn}}"
              password: "{{ ldap_admin_password.stdout }}"
              attributes:
                username: uid
                display_name: cn
                mail: mail
              users_filter: "(&({username_attribute}={input})(objectClass=posixAccount))"
              groups_filter: "(&(objectClass=posixGroup)(memberUid={input}))"

          totp:
            disable: false
            issuer: auth.{{inventory_hostname}}
            algorithm: sha1
            digits: 6
            period: 30
            skew: 1

        backup: yes
      notify:
      - Restart authelia


    - name: Check if Authelia secrets exists
      stat:
        path: /home/docker/_defaults/mailclient
      register: authelia_mail

    - name: Generate Authelia secrets
      when: not authelia_mail.stat.exists
      block:
       - name: /home/docker/authelia.{{inventory_hostname}}/authelia-data/configuration.yml
         blockinfile:
           path: /home/docker/authelia.{{inventory_hostname}}/authelia-data/configuration.yml
           mode: "0600"
           owner: root
           group: root
           create: yes
           marker: "# {mark} ANSIBLE MANAGED BLOCK NOTIFICATION"
           block: |

             notifier:
               filesystem:
                 filename: /config/notifications.txt

           backup: yes
         notify:
         - Restart authelia


    - name: Generate Authelia secrets
      when: authelia_mail.stat.exists
      block:

       - name: Get smtp_user from file
         shell: "grep ^smtp_user= /home/docker/_defaults/mailclient | cut -d= -f2-"
         register: smtp_user
         changed_when: false

       - name: Get smtp_password from file
         shell: "grep ^smtp_pw= /home/docker/_defaults/mailclient | cut -d= -f2-"
         register: smtp_password
         changed_when: false

       - name: Get smtp_server from file
         shell: "grep ^smtp_srv= /home/docker/_defaults/mailclient | cut -d= -f2-"
         register: smtp_server
         changed_when: false

       - name: Get smtp_port from file
         shell: "grep ^smtp_port= /home/docker/_defaults/mailclient | cut -d= -f2-"
         register: smtp_port
         changed_when: false

       - name: Get smtp_from from file
         shell: "grep ^smtp_from= /home/docker/_defaults/mailclient | cut -d= -f2-"
         register: smtp_from
         changed_when: false

       - name: /home/docker/authelia.{{inventory_hostname}}/authelia-data/configuration.yml
         blockinfile:
           path: /home/docker/authelia.{{inventory_hostname}}/authelia-data/configuration.yml
           mode: "0600"
           owner: root
           group: root
           create: yes
           marker: "# {mark} ANSIBLE MANAGED BLOCK NOTIFICATION"
           block: |
             notifier:
               smtp:
                 username: {{ smtp_user.stdout }}
                 password: {{ smtp_password.stdout }}
                 address: {{ smtp_server.stdout }}:{{ smtp_port.stdout }}
                 sender: {{ smtp_from.stdout }}
                 subject: "[auth.{{inventory_hostname}}] Notification"
                 startup_check_address: {{ smtp_from.stdout }}
                 identifier: "authelia"
                 timeout: 15s

           backup: yes
         notify: Restart authelia

    - name: /home/docker/authelia.{{inventory_hostname}}/authelia-data/configuration.yml
      blockinfile:
        path: /home/docker/authelia.{{inventory_hostname}}/authelia-data/configuration.yml
        mode: "0600"
        owner: root
        group: root
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK ACCESS CONTROL"
        block: |
          access_control:
            default_policy: deny
            rules:
              - domain: "{{inventory_hostname}}"
                policy: one_factor

        backup: yes
      notify: Restart authelia

    - name: /home/docker/authelia.{{inventory_hostname}}/docker-compose.yml Container Configuration
      blockinfile:
        path: /home/docker/authelia.{{inventory_hostname}}/docker-compose.yml
        create: yes
        mode: 0440
        owner: root
        group: docker
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          services:

            authelia.{{inventory_hostname}}:
              image: authelia/authelia:latest
              restart: unless-stopped
              networks:
                - authelia.{{inventory_hostname}}--network
                - traefik
              volumes:
                - ./authelia-data:/config
                - /etc/localtime:/etc/localtime:ro
                - /etc/hosts:/etc/hosts:ro
              labels:
                - traefik.enable=true
                # HTTPS
                - traefik.http.routers.authelia-{{ ansible_facts['hostname'] }}.rule=Host(`auth.{{ ansible_facts['nodename'] }}`)
                - traefik.http.routers.authelia-{{ ansible_facts['hostname'] }}.entrypoints=https
                - traefik.http.routers.authelia-{{ ansible_facts['hostname'] }}.tls=true
                # Proxy to service-port
                - traefik.http.services.authelia-{{ ansible_facts['hostname'] }}.loadbalancer.server.port=9091
                - traefik.http.routers.authelia-{{ ansible_facts['hostname'] }}.service=authelia-{{ ansible_facts['hostname'] }}
                # cert via letsencrypt
                - traefik.http.routers.authelia-{{ ansible_facts['hostname'] }}.tls.certresolver=letsencrypt
                # Traefik network
                - traefik.docker.network=traefik
                # auth
                - traefik.http.routers.authelia-{{ ansible_facts['hostname'] }}.middlewares=secHeaders@file

          networks:
            authelia.{{inventory_hostname}}--network:
              driver: bridge
              driver_opts:
                com.docker.network.bridge.name: br-authelia
            traefik:
              external: true

        backup: yes        
      notify: Restart authelia

  handlers:

    - name: Restart authelia
      ansible.builtin.shell: docker-compose down && docker-compose up -d
      args:
        chdir: /home/docker/authelia.{{inventory_hostname}}


