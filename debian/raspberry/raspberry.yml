---
- name: Raspberry Debian Linux Setup
  hosts: all
  tasks:
    
    - name: Remove the grpup pi
      ansible.builtin.user:
        name: pi
        state: absent
        remove: yes

    - name: Remove the user pi
      ansible.builtin.user:
        name: pi
        state: absent
        remove: yes

    - name: /usr/local/sbin/raspi-wifi-country.sh
      blockinfile:
        path: /usr/local/sbin/raspi-wifi-country.sh
        create: yes
        mode: 0500
        owner: root
        group: root
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          [ -e /var/log/raspi-wifi-country.log ] && exit 0
          raspi-config nonint do_wifi_country DE
          echo "$(date) $$" >> /var/log/raspi-wifi-country.log
        backup: yes
        validate: /bin/bash -n %s

    - name: /usr/local/sbin/raspi-wifi-country.sh shebang
      lineinfile:
        path: /usr/local/sbin/raspi-wifi-country.sh
        insertbefore: BOF
        line: "#!/bin/bash -e"

    - name: run /usr/local/sbin/raspi-wifi-country.sh
      ansible.builtin.shell: ./raspi-wifi-country.sh
      args:
        chdir: /usr/local/sbin
        creates: /var/log/raspi-wifi-country.log
        
    - name: Prepare new cmdline with required parameters (Raspberry Pi)
      set_fact:
        new_cmdline: >-
          {{
            (
              (lookup('file', '/boot/firmware/cmdline.txt') | trim).split()
              | difference(['cgroup_enable=memory','cgroup_memory=1','cgroup_enable=cpuset','swapaccount=1'])
              + ['cgroup_enable=memory','cgroup_memory=1','cgroup_enable=cpuset','swapaccount=1']
            ) | join(' ')
          }}

    # Write back only if changed (Raspberry Pi)
    - name: Update /boot/firmware/cmdline.txt if necessary (Raspberry Pi)
      copy:
        dest: /boot/firmware/cmdline.txt
        content: "{{ new_cmdline }}\n"
        owner: root
        group: root
        mode: '0644'

